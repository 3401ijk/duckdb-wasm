set (BOOST_VERSION_REQUIRED 1.74.0)
message(STATUS "BOOST_VERSION_REQUIRED=${BOOST_VERSION_REQUIRED}")

if (DEFINED BOOST_ARCHIVE)
    set(BOOST_INSTALL_DIR "${CMAKE_BINARY_DIR}/third_party/boost/install")
    set(BOOST_INCLUDE_DIR "${BOOST_INSTALL_DIR}/include")
    set(BOOST_LIBRARY_DIR "${BOOST_INSTALL_DIR}/lib")
    set(BOOST_ARCHIVE_DIR "${CMAKE_BINARY_DIR}/third_party/boost/archive")

    if (EXISTS ${BOOST_INCLUDE_DIR}/boost/version.hpp)
        file(STRINGS ${BOOST_INCLUDE_DIR}/boost/version.hpp BOOST_VERSIONSTR REGEX "#define[ ]+BOOST_VERSION[ ]+[0-9]+")
        string(REGEX MATCH "[0-9]+" BOOST_VERSIONSTR ${BOOST_VERSIONSTR})
        if (BOOST_VERSIONSTR)
            math(EXPR BOOST_VERSION_MAJOR "${BOOST_VERSIONSTR} / 100000")
            math(EXPR BOOST_VERSION_MINOR "${BOOST_VERSIONSTR} / 100 % 1000")
            math(EXPR BOOST_VERSION_SUBMINOR "${BOOST_VERSIONSTR} % 100")
            set(BOOST_VERSION "${BOOST_VERSION_MAJOR}.${BOOST_VERSION_MINOR}.${BOOST_VERSION_SUBMINOR}")
        endif()
        message(STATUS "BOOST_VERSION=${BOOST_VERSION}")
    endif ()

    if (BOOST_VERSION STREQUAL BOOST_VERSION_REQUIRED)
        message(STATUS "Boost version OK!")
    else ()
        message(STATUS "BOOST_ARCHIVE=${BOOST_ARCHIVE}")
        file(REMOVE ${BOOST_ARCHIVE_DIR})
        file(REMOVE ${BOOST_INCLUDE_DIR})
        file(MAKE_DIRECTORY ${BOOST_ARCHIVE_DIR})
        file(MAKE_DIRECTORY ${BOOST_INCLUDE_DIR})

        execute_process(
            COMMAND ${CMAKE_COMMAND} -E tar xzf ${BOOST_ARCHIVE}
            WORKING_DIRECTORY ${BOOST_ARCHIVE_DIR}
        )
        file(GLOB BOOST_ARCHIVE_CHILDREN RELATIVE ${BOOST_ARCHIVE_DIR} ${BOOST_ARCHIVE_DIR}/*)
        list(GET BOOST_ARCHIVE_CHILDREN 0 BOOST_ARCHIVE_CHILD)
        set(BOOST_ARCHIVE_CONTENT ${BOOST_ARCHIVE_DIR}/${BOOST_ARCHIVE_CHILD})
        message(STATUS "BOOST_ARCHIVE_CONTENT=${BOOST_ARCHIVE_CONTENT}")

        file(COPY ${BOOST_ARCHIVE_CONTENT}/boost DESTINATION ${BOOST_INCLUDE_DIR})
    endif ()
else ()
    find_package(Boost ${BOOST_VERSION_REQUIRED} REQUIRED)
    set (BOOST_INCLUDE_DIR ${Boost_INCLUDE_DIR})
endif ()
